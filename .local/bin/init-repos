#!/usr/bin/env pwsh
[CmdletBinding()]
param (
    [Parameter()]
    [Switch]
    $Refresh    # Update folders that are already present
)

New-Item ~/src -ItemType Directory -Force | Out-Null

function CloneRepos([string]$folder, [Object[]]$repos, [bool]$refresh) {
    $path = Join-Path ~/src $folder
    if (-Not (Test-Path $path)) {
        New-Item $path -ItemType Directory -Force | Out-Null
    }
    $repos | ForEach-Object {
        $path = Join-Path ~/src $folder $_.name
        if (-Not (Test-Path $path)) {
            Write-Host -ForegroundColor Cyan "Cloning $($_.name)"
            git clone "$($_.url).git" $path
        }
        else {
            if ($refresh) {
                Write-Host -ForegroundColor Cyan "Updating $($_.name)"
                Push-Location $path
                git pull
                Pop-Location
            }
        }
    }    
}


if ($env:APPDATA) {
    $github_profile = (Get-Content "$($env:APPDATA)/GitHub CLI/hosts.yml" | ConvertFrom-Yaml).'github.com'.user
}
elseif ($env:HOME) {
    $github_profile = (Get-Content "$($env:HOME)/.config/gh/hosts.yml" | ConvertFrom-Yaml).'github.com'.user
}
else {
    throw "Unable to locate GitHub user profile name, try gh auth login"
}

$repos = @(
    @{
        name = "dotfiles"
        url  = "https://github.com/$github_profile/dotfiles"
    }
)
CloneRepos $github_profile $repos $Refresh.IsPresent

$repos = @(
    @{
        name = "idp-scim-sync"
        url  = "https://github.com/slashdevops/idp-scim-sync"
    }
)
CloneRepos "GitHub" $repos $Refresh.IsPresent


$repos = gh repo list AccelerateLearning --json "name,url" --limit 300 | ConvertFrom-Json | Sort-Object name
CloneRepos "AccelerateLearning" $repos $Refresh.IsPresent

# Create project manager file
if (-Not (Test-Path "$($env:USERPROFILE)/AppData/Roaming/Code/User/globalStorage/alefragnani.project-manager")) {
    New-Item -ItemType Directory "$($env:USERPROFILE)/AppData/Roaming/Code" -ErrorAction SilentlyContinue | Out-Null
    New-Item -ItemType Directory "$($env:USERPROFILE)/AppData/Roaming/Code/User" -ErrorAction SilentlyContinue | Out-Null
    New-Item -ItemType Directory "$($env:USERPROFILE)/AppData/Roaming/Code/User/globalStorage" -ErrorAction SilentlyContinue | Out-Null
    New-Item -ItemType Directory "$($env:USERPROFILE)/AppData/Roaming/Code/User/globalStorage/alefragnani.project-manager" -ErrorAction SilentlyContinue | Out-Null
}

Get-ChildItem ~/src/AccelerateLearning -Directory | ForEach-Object {
    [PSCustomObject]@{
        name     = $_.Name
        rootPath = "vscode-remote://wsl+ubuntu-22.04/$($env:HOME)/src/AccelerateLearning/$($_.Name)"
        paths    = @()
        tags     = @()
        enabled  = $true
    }
} | ConvertTo-Json | Set-Content "$($env:USERPROFILE)/AppData/Roaming/Code/User/globalStorage/alefragnani.project-manager/projects.json"
