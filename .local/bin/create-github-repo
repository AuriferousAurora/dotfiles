#!/bin/pwsh
[CmdletBinding()]
param (
    [Parameter()]
    [String]
    $Name,

    [Parameter()]
    [String]
    $Team,

    [Parameter()]
    [String]
    $JenkinsUrl = 'https://cicd-tools.eops.prd.gcp.efx/iaas-ps-jenkins/'
)

if (-Not $Name) {
  $path = Get-Location
}
else {
  $path = Join-Path (Get-Location) $Name
}

if (-Not (Test-Path $path)) {
  Write-Error "$path does not exist"
  exit
}
elseif (-Not (Test-Path "$path/.git")) {
  Write-Error "$path is not a valid git repo"
  exit
}

if (-Not $Team) {
  $Team = Get-Location | Split-Path -Parent | Split-Path -Leaf
}

$repo_name = "$($Team)-$Name"
$repo_url = "https://github.com/Equifax/$repo_name.git"
$jenkins_instance_name = ([uri]$JenkinsUrl).AbsolutePath.Replace('/','')

Push-Location $Path

if ($(git remote)) {
  git fetch --all
}
gh repo create Equifax/$repo_name --internal --confirm --team $team
git push -f --mirror origin

Pop-Location

# Build a uri that prefills all of these value for a CICD ticket
$query = [System.Web.HttpUtility]::ParseQueryString([String]::Empty)
$query.Add('pid', '36900')
$query.Add('issuetype', '7') # IssueType = Story
$query.Add('reporter', 'rxc423')
$query.Add('labels', 'CICDREPOS')
$query.Add('labels', 'GitHub_JenkinsAuth')
$query.Add('summary', "$jenkins_instance_name Authentication Request with GitHub")
$query.Add('priority', '5') # Priority = Trivial
$query.Add('customfield_13900', '33239')   # Organization Unit = IaaS
$query.Add('customfield_11500', 'rob.cannon@equifax.com') # Reporter
$query.Add('description', @"
||Field||Value||
|Jenkins Url|$JenkinsUrl|
|GitHub Repositories|$repo_url|
|Repository Type|Internal|
|Organization Name|Equifax|
"@)

$uri = [UriBuilder]::new('https://equifax.atlassian.net/secure/CreateIssueDetails!init.jspa')
$uri.Query = $query.ToString()

Write-Host "Create Ticket with CICD team to grant access to GitHub Repo $repo_name"
Write-Host ""
Write-Host $uri.ToString()