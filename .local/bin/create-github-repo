#!/usr/bin/env pwsh
[CmdletBinding()]
param (
    [Parameter()]
    [String]
    $Name,

    [Parameter()]
    [String]
    $Team = 'cloud-services-admin'
)

if ($env:APPDATA) {
  $token = (Get-Content "$($env:APPDATA)/GitHub CLI/hosts.yml" | ConvertFrom-Yaml).'github.com'.oauth_token
} elseif ($env:HOME) {
  $token = (Get-Content "$($env:HOME)/.config/gh/hosts.yml" | ConvertFrom-Yaml).'github.com'.oauth_token
} else {
  throw "Unable to locate GitHub token, try gh auth login"
}
$headers = @{ Authorization = "token $token" }

if (-Not $Name) {
  $path = Get-Location
  $Name = $path | Split-Path -Leaf
  Write-Host "Name parameter not specified, using -Name $Name"
}
else {
  $path = Join-Path (Get-Location) $Name
}

if (-Not (Test-Path $path)) {
  throw "$path does not exist"
}

Push-Location $path
try {
  # Make sure code is checked in
  $status = Get-GitStatus
  if (-Not $status) {
    throw "No git repository found at $path"
  }

  if ($status.HasUntracked) {
    throw "Repository has uncommited files.  Please make sure the local repository is up to date before creating a remote repo"
  }

  #$parent = $path | Split-Path -Parent | Split-Path -Leaf
  #$repo_name = "$($parent)-$Name"
  $repo_name = $Name
  $repo_url = "https://github.com/AccelerateLearning/$repo_name.git"

  Write-Host "Creating new repo at $repo_url"

  $remote = git remote get-url origin 2>$null

  if (-Not $remote) {

    # Check if team exists
    if (-Not (Invoke-RestMethod -Headers $headers -Uri "https://api.github.com/orgs/AccelerateLearning/teams/$Team" -SkipHttpErrorCheck).slug) {
      throw "Team $Team not found in the AccelerateLearning organization"
    }


    if ($(git remote)) {
      git fetch --all
    }
    gh repo create AccelerateLearning/$repo_name --private --push --remote origin --source . --team $team
    git push --set-upstream origin main
    git push -f --mirror origin

    gh api --method PUT -H "Accept: application/vnd.github.v3+json" /orgs/AccelerateLearning/teams/$team/repos/AccelerateLearning/$repo_name --field permission=admin
  }
  else {
    Write-Warning "Remote GitHub repo already exists at $remote"
  }

  Write-Host "https://github.com/AccelerateLearning/$repo_name.git"
}
catch {
  Write-Error $_
  exit 1
}
finally {
  Pop-Location
}