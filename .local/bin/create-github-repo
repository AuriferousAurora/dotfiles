#!/usr/bin/env pwsh
[CmdletBinding()]
param (
  [Parameter()]
  [String]$Name,
  [Parameter()]
  [Switch]$Public
)

if (-Not $Name) {
  $path = Get-Location
  $Name = $path | Split-Path -Leaf
  Write-Host "Name parameter not specified, using -Name $Name"
}
else {
  $path = Join-Path (Get-Location) $Name
}

if (-Not (Test-Path $path)) {
  throw "$path does not exist"
}

Push-Location $path
try {
  # Make sure code is checked in
  $status = Get-GitStatus
  if (-Not $status) {
    throw "No git repository found at $path"
  }

  if ($status.HasUntracked) {
    throw "Repository has uncommited files.  Please make sure the local repository is up to date before creating a remote repo"
  }

  $repo_name = $Name
  $repo_url = "https://github.com/AccelerateLearning/$repo_name.git"

  Write-Host "Creating new repo at $repo_url"

  $remote = git remote get-url origin 2>$null

  if (-Not $remote) {
    if ($(git remote)) {
      git fetch --all
    }
    if ($Public.IsPresent) {
      gh repo create AccelerateLearning/$repo_name --public --push --remote origin --source . --team cloud-engineering-team-leads
    }
    else {
      gh repo create AccelerateLearning/$repo_name --private --push --remote origin --source . --team cloud-engineering-team-leads
    }
    git push --set-upstream origin main
    git push -f --mirror origin

    gh api --method PUT -H "Accept: application/vnd.github.v3+json" /orgs/AccelerateLearning/teams/cloud-engineering-team-leads/repos/AccelerateLearning/$repo_name --field permission=admin
    gh api --method PUT -H "Accept: application/vnd.github.v3+json" /orgs/AccelerateLearning/teams/cloud-engineering-developers/repos/AccelerateLearning/$repo_name --field permission=push
    gh api --method PUT -H "Accept: application/vnd.github.v3+json" /orgs/AccelerateLearning/teams/cloud-engineering-stakeholders/repos/AccelerateLearning/$repo_name --field permission=triage
  }
  else {
    Write-Warning "Remote GitHub repo already exists at $remote"
  }

  Write-Host "https://github.com/AccelerateLearning/$repo_name.git"
}
catch {
  Write-Error $_
  exit 1
}
finally {
  Pop-Location
}